
crear una carpeta ctrl+shif+n
---------------------Clase 1-------------------------------
R2054
codigo para logueo aula virtual: R00XX

Multiprocesamiento:
en un core(un cerebro) ejecuta un pedacito del primer programa y despues otro pedacito del segundo. A tiempo humano parace que los programas se ejecutan al mismo tiempo

En Fork: los hijos no comparten memoria

Threads (O hilos):
los procesos o tareas comparten memoria

--------------------Clase 2-------------------------------
terminator consola multiple

el "extern" es para avisar que es una variable global para todos lod modulos
ej: extern int b; variable global de todos
ej: static int b; variables global de solo un modulo tambien se aplica a funciones
el static le da visivilidad de la variable solo al modulo donde esta declarada

ifndef X// si no  esta definido X
define X 'a'// definir X
endif  //fin del ifndef

sokets

abrimos un socket
------int socket(int Dominio, int Tipo ,int Protocolo);
devuelve un fd
Tipo: tcp/ip,udp
Protocolo: la funcion adopta por default el para metro es cero

-----asociamos ip al puerto por medio del socket
int bind(int sockfd,struct sockaddr* my_addr , int addrlen);

htons() pone el dato el formato de red
inet_addr() convierte la ip que esta en string a numero y en formato de red

me pongo a escucahr
-----listen(int sockfd , int backlog) 
backlog cantidad de conexiones que se pueden poner en cola

----------------------HILOS---------------------
es un solo proceso que se divide en tareas  para compilar biblioteca -l pthread







----------------------------Clase 3-------------------------------------------
señales son eventos enviados por otros procesos(puede ser la consola)

sig_atomic_t :tipo de variable que en  la asignacion en un variable no pueda ser interrumpida por una señal 


las señales no se acumulan solo queda una

Cola de mensajes

----------------------------Clase 4------------------------------------------
shared memory: solicitar una zona de memoria de acceso multiple

pasos:
genero memoria
conectar con los procesos
lo desconecto o lo elimino

Semaforo: administra el acceso a memoria para que los procesos no se choquen


comando :ipcs
para remover shared memory por terminal: ipcrm "shmid"

mcuxpreso

threads-------------------
// 1. crear las tareas

	stat_1= pthread_create(&tarea_id,NULL,sumar,&datos);

	datos = es donde estan los parametros de la funcion sumar
	sumar = funcion que hace el thread (void)sumar (void *)
//2. esperar que terminen
	pthread_join(tarea_id,(void **)&suma);
	en &suma guarda la direccion de memoria



cola de mensajes----------


shared memory-------------


semaforos-----------------

primere paso crear semaforo con la cant semget

segundo paso setear el semaforo con semctl

tercer paso para tomar decrementar con semop -1

cuarto paso para liberar el semaforo con semop 1


----------------------------------CLASE 5-----------------------------

Maquina de estado

abstraccion: como se ve cuales son las caracteristicas que se ven

estados: cuando definimos algo y no cambia
transiciones: es el cambio de un estado a otro ej: el asensor que suba se para 
exicitaciones o eventos: condiciona la transicion es algo que genera la transicion
acciones: 

----------------------------------CLASE 6-----------------------------
estados estaticos del sistema:son aquellos que no cambian con el tiempo hasta que 
								alguien hace algo para cambiarlo
ejemplo de puerta automatica

estados: abierto-cerrado abriendo-cerrando

eventos: sensor de presencia
		 sensor abierto
		 sensor cerrado

acciones: motor cerrar 1
		  motor abrir 0

IDE mcu

new proyect -> MCU.... -> C/C++->


------------------------------Clase 7----------------------------------------


Estacionamiento

hay dos sensores S1 S2

sensor cuando no corta esta en cero

estados: 00 / 01 / 11 / 10

eventos: 

acciones:


u_model_factory: software para hacer el diagrama de maquina de estado


diagrama de actividad


----------------------------CLASE 8-------------------------------------------
levanta vidrio
como incluir el punto h
en proyecto click derecho en propiedades->sc/c++- build>settins->inlcudes->-l en add y buscar la biblioteca busco la carpeta inc

sacar el lib poner Infotronic nada mas


///tarea ahcer un limpia parabrisas con tres intervalos de tiempo distinto
considerar que estando en el sapito mando una velocidad tiene que abortar lo que estaba haciendo actualmente
hay un posible faltante

como incluir la biblioteca
	en librerias apunto a la biblioteca


	eventos: close_button
			open_button
			close_sensor
			open_sensor

	acciones:
			parar();
			cerrar();
			abrir();
quieto_
condicion_1: close_button: off &  

----------------------------------CLASE 9-------------------------------------

C++

:: //es un operador de visibilidad
& //se puede usar para recibir el dato por referencia o alias en el argumentos
new //operador para pedir memoria
delete// operador para liberar memoria


clase= molde

generar objeto es instanciar la clase

herencia: cuando una clase hereda toda las cosas de otra clase
composicion: cuando una clase esta compuesta por objetos
sobrecarga: 
polimorfismo: misma funciones con mismo nombre pero distintos argumentos
mensajes: funciones que se invocan afuera del objeto para obtener o modificar algo del objeto

tipos de visivilidad de funciones y variable de una clase

private: no es modificable ni heredable
public: lo ven todos
protec: no es modificable y si se puede hederar
comom hacer una clase ej:

class "nombre" {
	private:
		struct nodo{
			struct dato d;
			struct nodo * next;
		}

		struct nodo*h;
	public:
		Pila(void){ //constructtor
			h= NULL; 
		} 
}


Para hacer el destructor es con ~

Pila ::~Pila (void){
	struct dato e;
	while(!vacia()){
		pop(e);
	}
}

-----

------------------------------------CLASE 10--------------------------------------------
this para referirse sobre una variable del objeto actuante
c++
operador "<<": para sobrecargar?
para salida de datos: cout<<
ingreso por teclado: cin>>
header: #include <iostream>
const int a : variable que es constante

no se puede tener primero la referencia y no el objeto

github





